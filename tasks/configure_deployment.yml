---
- name: 'Check input'
  assert:
    that:
      - foreman_deploy_dns_scenario in foreman_deploy_dns_scenarios

- name: 'Retrieve Foreman instance network settings'
  set_fact:
    foreman_instance_network_settings: "{{ foreman_deploy_networks | selectattr('smart_proxy', 'equalto', ansible_facts['fqdn']) }}"

- name: 'Set up prerequisites for nsupdate scenario'
  block:
    - name: 'Check permissions on rndc key'
      file:
        path: "{{ foreman_deploy_dns_rndc_key }}"
        owner: 'root'
        group: 'foreman-proxy'
        mode: 0640
        setype: 'dnssec_t'
        serole: 'object_r'

    - name: 'Ensure nsupdate is installed (Foreman)'
      package:
        name: 'bind-utils'
        state: 'present'
      when: foreman_server_type == 'foreman'

    - name: 'Ensure nsupdate is installed (Satellite)'
      yum:
        name: 'bind-utils'
        state: 'present'
        disable_plugin: 'foreman-protector'
      when: foreman_server_type == 'satellite'
  when: foreman_deploy_dns_scenario == 'nsupdate'

- name: 'Ensure symlink for boot files'
  file:
    state: 'link'
    src: '/boot/efi/EFI/rocky'
    dest: '/boot/efi/EFI/redhat'
  when: ansible_facts['distribution'] == 'Rocky'

- name: 'Configure Foreman instance for deployment'
  shell: |
    export LANG="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
    /usr/sbin/foreman-installer \
    {{ lookup('vars', 'foreman_dns_scenario_' + foreman_deploy_dns_scenario ) }}
    --foreman-proxy-dhcp true \
    --foreman-proxy-dhcp-interface {{ foreman_instance_deploy_interface }} \
    --foreman-proxy-dhcp-range "{{ foreman_instance_network_settings[0]['range_start'] }} {{ foreman_instance_network_settings[0]['range_end'] }}" \
    --foreman-proxy-dhcp-gateway {{ foreman_instance_network_settings[0]['network_gateway'] }} \
    --foreman-proxy-dhcp-nameservers {{ foreman_instance_network_settings[0]['dns_primary'] | default(ansible_facts[foreman_instance_deploy_interface]['ipv4']['address']) }} \
    --foreman-proxy-dhcp-pxeserver {{ ansible_facts[foreman_instance_deploy_interface]['ipv4']['address'] }} \
    --foreman-proxy-templates=true \
    --foreman-proxy-httpboot=true \
    --foreman-proxy-http=true \
    --foreman-proxy-httpboot-listen-on=both \
    --foreman-proxy-tftp true \
    --foreman-proxy-tftp-managed true \
    --foreman-proxy-tftp-servername {{ ansible_facts['fqdn'] }} {% if foreman_server_type != 'satellite' %} --detailed-exitcodes {% endif %}
  register: 'installer_output'
  changed_when: installer_output['rc'] == 2 or (foreman_server_type == 'satellite' and installer_output['rc'] == 0)
  failed_when: installer_output['rc'] == 1 or installer_output['rc'] == 4
  when: foreman_deploy_run_installer

- name: 'Set environment facts (placeholder)'
  set_fact:
    proxy_env:
      empty_var: 'Just_a_placeholder'
  when: foreman_http_proxy_policy == 'none'

- name: 'Set environment facts (http_proxy)'
  set_fact:
    proxy_env:
      http_proxy: "{{ foreman_http_proxy_url }}"
      https_proxy: "{{ foreman_http_proxy_url }}"
      no_proxy: "{{ foreman_http_proxy_exceptions | join(',') }}"
  when: foreman_http_proxy_policy == 'global_default_http_proxy'

- name: 'Ensure Discovery Image present (Foreman)'
  unarchive:
    src: "http://downloads.theforeman.org/discovery/releases/{{ foreman_discovery_image_release }}/fdi-image-latest.tar"
    dest: '/var/lib/tftpboot/boot'
    remote_src: true
  when: foreman_server_type == 'foreman'
  environment: "{{ proxy_env }}"

- name: 'Ensure Discovery Image present (Satellite)'
  yum:
    name: 'foreman-discovery-image'
    state: 'present'
    disable_plugin: 'foreman-protector'
  when: foreman_server_type == 'satellite'
