---
- name: 'Ensure package dependencies'
  package:
    name: 'python-pip'
    state: 'present'

- name: 'Ensure PiP dependencies'
  pip:
    name: 'apypie'
    state: 'present'

- name: 'Ensure firewall ports'
  firewalld:
    port: "{{ port }}"
    permanent: true
    immediate: true
    state: 'enabled'
  loop:
    - '7/tcp'
    - '7/udp'
    - '53/tcp'
    - '53/udp'
    - '67/udp'
    - '69/udp'
    - '80/tcp'
    - '443/tcp'
    - '8000/tcp'
    - '8140/tcp'
    - '9090/tcp'
  loop_control:
    loop_var: 'port'

- name: 'Ensure organization'
  theforeman.foreman.organization:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ foreman_organization }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'

- name: 'Ensure Locations'
  theforeman.foreman.location:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organizations:
      - "{{ foreman_organization }}"
    name: "{{ location }}"
    state: 'present'
  loop: "{{ foreman_locations }}"
  loop_control:
    loop_var: 'location'

- name: 'Ensure Lifecycle environments'
  theforeman.foreman.lifecycle_environment:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ lifecycle }}"
    description: 'Managed by Ansible, your changes will be lost'
    prior: "{{ foreman_lifecycle[index-1] }}"
    state: 'present'
  loop: "{{ foreman_lifecycle }}"
  when: lifecycle != 'Library'
  loop_control:
    index_var: 'index'
    loop_var: 'lifecycle'

- name: 'Ensure Lifecycle Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ host_collection }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: >-
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle -%}
    {%-   for os in foreman_host_collections_os -%}
    {%-     set line = os + '-' + lifecycle|lower -%}
    {%-     set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'host_collection'

- name: 'Ensure OS Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ os_collection }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_host_collections_os }}"
  loop_control:
    loop_var: 'os_collection'

- name: 'Ensure daily sync plan'
  theforeman.foreman.sync_plan:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    interval: 'daily'
    name: 'Daily repo sync'
    description: 'Managed by Ansible, your changes will be lost'
    enabled: true
    sync_date: '2020-01-01 00:00:00 UTC'
    state: 'present'

- name: 'Ensure product GPG keys'
  theforeman.foreman.content_credential:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product['gpg_key'] }}"
    content_type: 'gpg_key'
    content: "{{ lookup('url', product['gpg_key_url'], split_lines=False) }}"
    state: 'present'
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'

- name: 'Ensure products'
  theforeman.foreman.product:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product['name'] }}"
    description: 'Managed by Ansible, your changes will be lost'
    gpg_key: "{{ product['gpg_key'] }}"
    sync_plan: 'Daily repo sync'
    state: 'present'
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'

- name: 'Ensure product repositories'
  theforeman.foreman.repository:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    download_policy: 'immediate'
    http_proxy_policy: "{{ foreman_http_proxy_policy | default('none') }}"
    http_proxy: "{{ foreman_http_proxy | default(omit) }}"
    name: "{{ repo[0]['name'] }}-{{ repo[1]['name'] }}"
    url: "{{ repo[1]['url'] }}"
    content_type: "{{ repo[0]['type'] }}"
    ssl_ca_cert: "{{ repo[1]['ssl_ca_cert'] | default(omit) }}"
    ssl_client_cert: "{{ repo[1]['ssl_client_cert'] | default(omit) }}"
    ssl_client_key: "{{ repo[1]['ssl_client_key'] | default(omit) }}"
    upstream_username: "{{ repo[1]['upstream_username'] | default(omit) }}"
    upstream_password: "{{ repo[1]['upstream_password'] | default(omit) }}"
    product: "{{ repo[0]['name'] }}"
    gpg_key: "{{ repo[0]['gpg_key'] }}"
    state: 'present'
  register: 'repo_created'
  loop: "{{ foreman_products | subelements('repositories', { 'skip_missing': true}) }}"
  loop_control:
    loop_var: 'repo'

- name: 'Sync changed Product Repositories, this may take long...'
  theforeman.foreman.repository_sync:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    product: "{{ product['name'] }}"
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'
  async: 10800
  poll: 60
  when: repo_created['changed']

- name: 'Ensure content views and versions'
  include_tasks: 'cv_add_base.yml'
  loop: "{{ foreman_products }}"

- name: 'Ensure composite content views'
  theforeman.foreman.content_view:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ comp_content_view['name'] }}"
    description: 'Managed by Ansible, your changes will be lost'
    composite: true
    auto_publish: true
    components: "{{ comp_content_view['components'] }}"
  register: 'cov_created'
  loop: "{{ foreman_composite_content_views }}"
  loop_control:
    loop_var: 'comp_content_view'

- name: 'Promote content view version for newly created composite content views'
  theforeman.foreman.content_view_version:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    content_view: "{{ comp_content_view['name'] }}"
    lifecycle_environments: "{{ foreman_lifecycle }}"
  when: cov_created['changed']
  loop: "{{ foreman_composite_content_views }}"
  loop_control:
    loop_var: 'comp_content_view'

- name: 'Ensure Activation key Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ collection['name'] | lower }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_activation_keys }}"
  loop_control:
    loop_var: 'collection'

- name: 'Ensure Activation key extra Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ collection[1] }}"
    #description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_activation_keys | subelements('host_collections', { 'skip_missing': true}) }}"
  loop_control:
    loop_var: 'collection'

- name: 'Ensure Activation keys'
  include_tasks: 'activation_key_add.yml'
  loop: >-
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle -%}
    {%-   for os in foreman_host_collections_os -%}
    {%-     set line = {'os': os, 'host_collection': [os + '-' + lifecycle|lower], 'lifecycle': lifecycle} -%}
    {%-     set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'key_lifecycle'

- name: 'start'
  debug:

- name: 'Ensure Foreman Domain'
  theforeman.foreman.domain:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ zone.dns_zone }}"
    description: "{{ zone.dns_zone }} - Managed by Ansible"
    organizations:
      - "{{ foreman_organization }}"
    locations: "{{ zone.locations }}"
    dns_proxy: "{{ ansible_facts['fqdn'] }}"
    state: 'present'
  loop: "{{ foreman_deploy_networks }}"
  loop_control:
    loop_var: 'zone'

- name: 'Ensure Foreman Subnet'
  theforeman.foreman.subnet:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ network.name }}"
    description: 'Managed by Ansible, your changes will be lost'
    organizations:
      - "{{ foreman_organization }}"
    locations: "{{ network.locations }}"
    domains:
      - "{{ network.dns_zone }}"
    network: "{{ network.address | ipaddr('network') }}"
    cidr: "{{ network.address | ipaddr('prefix') }}"
    from_ip: "{{ network.range_start }}"
    to_ip: "{{ network.range_end }}"
    boot_mode: 'DHCP'
    dns_proxy: "{{ ansible_facts['fqdn'] }}"
    dhcp_proxy: "{{ ansible_facts['fqdn'] }}"
    tftp_proxy: "{{ ansible_facts['fqdn'] }}"
    httpboot_proxy: "{{ ansible_facts['fqdn'] }}"
    template_proxy: "{{ ansible_facts['fqdn'] }}"
    state: 'present'
  loop: "{{ foreman_deploy_networks }}"
  loop_control:
    loop_var: 'network'

- name: 'Ensure Installation Media'
  theforeman.foreman.installation_medium:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ medium['name'] }} {{ medium['major_version'] }}"
    locations: "{{ foreman_locations }}"
    organizations:
      - "{{ foreman_organization }}"
    path: "{{ medium['path'] }}"
    os_family: "{{ medium['os_family'] }}"
    state: 'present'
  no_log: "{{ not foreman_debug }}"
  loop: "{{ foreman_operating_systems }}"
  loop_control:
    loop_var: 'medium'

- name: 'Ensure Operating Systems'
  theforeman.foreman.operatingsystem:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    description: "{{ os['name'] }} {{ os['major_version'] }}"
    major: "{{ os['major_version'] }}"
    release: "{{ os['release'] | default(omit) }}"
    name: "{{ os['name'] }}"
    family: "{{ os['os_family'] }}"
    password_hash: "{{ os['password_hash'] | default('SHA512') }}"
    parameters: "{{ os['parameters'] | default(omit) }}"
    provisioning_templates: "{{ os['provisioning_templates'] | default(omit) }}"
    architectures: "{{ os['arch'] }}"
    media:
      - "{{ os['name'] }} {{ os['major_version'] }}"
    ptables: "{{ os['partitions'] | default(omit) }}"
  no_log: "{{ not foreman_debug }}"
  loop: "{{ foreman_operating_systems }}"
  loop_control:
    loop_var: 'os'

- name: 'Ensure Host Groups, always changes as the current root_pass can not be compared'
  theforeman.foreman.hostgroup:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ hostgroup['name'] }}-{{ hostgroup['lifecycle'] }}"
    description: 'Managed by Ansible, your changes will be lost'
    organization: "{{ foreman_organization }}"
    locations: "{{ foreman_locations }}"
    lifecycle_environment: "{{ hostgroup['lifecycle'] }}"
    content_view: "COV {{ hostgroup['name'] }}"
    content_source: "{{ ansible_facts['fqdn'] }}"
    domain: "{{ hostgroup['dns_zone'] }}"
    subnet: "{{ hostgroup['network'] }}"
    architecture: "{{ hostgroup.arch[0] }}"
    operatingsystem: "{{ hostgroup['os'] }}"
    ptable: "{{ hostgroup['ptable'] }}"
    medium: "{{ hostgroup['os'] }}"
    parameters: "{{ hostgroup['parameters'] }}"
    root_pass: "{{ hostgroup['root_pass'] }}"
    pxe_loader: "{{ hostgroup['pxe_loader'] }}"
  no_log: "{{ not foreman_debug }}"
  loop: >- # This loop combines the following information: Activation Keys, Lifecycles, OS deployment variables and Deployment Networks
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle -%}
    {%-   for network in foreman_deploy_networks -%}
    {%-     if network['name'] == lifecycle -%}
    {%-       for key in foreman_activation_keys  -%}
    {%-         for os in foreman_operating_systems -%}
    {%-           if key.name.split('-')[0] == os['name'] + os['major_version'] | string -%}
    {%-             set parameters = [{'name': 'kt_activation_keys', 'value': key['name'] + '-' + lifecycle }] -%}
    {%-             set line = {'name': key['name'], 'arch': os['arch'], 'network': network['name'],
                                'root_pass': os['root_pass'] | default('changemeNOW!'),
                                'dns_zone': network['dns_zone'], 'smart_proxy': network['smart_proxy'],
                                'ptable': os['partitions'] | default('Kickstart default'),
                                'lifecycle': lifecycle, 'pxe_loader': os['pxe_loader'] | default('PXELinux BIOS'),
                                'os': os['name'] + ' ' + os['major_version'] | string,
                                'parameters': parameters + os['parameters'] | default([]) }  -%}
    {%-             set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-           endif -%}
    {%-         endfor -%}
    {%-       endfor -%}
    {%-     endif -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'hostgroup'

- name: 'Ensure Setting for booting unknown hosts'
  theforeman.foreman.setting:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: 'default_pxe_item_global'
    value: 'discovery'

- name: 'Set Random Hostname generator to MAC based'
  theforeman.foreman.setting:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: 'name_generator_type'
    value: 'MAC-based'
