---
- name: 'Check input'
  assert:
    that:
      - foreman_server_type in foreman_supported_server_types

- name: 'Ensure PiP dependencies'
  pip:
    name: 'apypie'
    state: 'present'
  when: ansible_facts['distribution'] != 'RedHat'

- name: 'Ensure PiP dependencies'
  block:
    - name: 'Install dependencies'
      pip:
        name:
          - 'apypie'
        state: 'present'
        executable: '/usr/local/bin/ansible_foreman_pip'
    - name: 'Symlink Apypie to system python'
      file:
        src: '/opt/rh/python27/root/usr/lib/python2.7/site-packages/apypie'
        dest: '/usr/lib/python2.7/site-packages/apypie'
        state: 'link'
  when: ansible_facts['distribution'] == 'RedHat'

- name: 'Ensure firewall ports'
  ansible.posix.firewalld:
    port: "{{ port }}"
    permanent: true
    immediate: true
    state: 'enabled'
  loop:
    - '7/tcp'
    - '7/udp'
    - '53/tcp'
    - '53/udp'
    - '67/udp'
    - '69/udp'
    - '80/tcp'
    - '443/tcp'
    - '8000/tcp'
    - '8140/tcp'
    - '9090/tcp'
  loop_control:
    loop_var: 'port'
  when: foreman_server_type == 'foreman'

- name: 'Ensure Red Hat Satellite firewalld profile'
  ansible.posix.firewalld:
    service: 'RH-Satellite-6'
    permanent: true
    immediate: true
    state: 'enabled'
  when: foreman_server_type == 'satellite'

- name: 'Ensure Organizations, Locations and Lifecycles'
  import_tasks: 'organization_lifecycle.yml'

- name: 'Ensure Host Collections'
  import_tasks: 'host_collections.yml'

- name: 'Ensure daily sync plan'
  theforeman.foreman.sync_plan:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    interval: 'daily'
    name: 'Daily repo sync'
    description: 'Managed by Ansible, your changes will be lost'
    enabled: true
    sync_date: '2020-01-01 00:00:00 UTC'
    state: 'present'

- name: 'Ensure Red Hat Products and Repositories'
  include_tasks: 'products_redhat.yml'
  when: foreman_configure_redhat_repos

- name: 'Ensure Products and Repositories'
  import_tasks: 'products.yml'

- name: 'Ensure Content Views (CVs) and versions for Products'
  include_tasks: 'cv_add_base_product.yml'
  loop: "{{ foreman_products }}"

- name: 'Ensure Content Views (CVs) and versions for other Content Views'
  include_tasks: 'cv_add_base.yml'
  loop: "{{ foreman_content_views }}"

- name: 'Ensure Composite Content Views (COVs)'
  import_tasks: 'comp_content_views.yml'

- name: 'Ensure Activation keys'
  include_tasks: 'activation_keys.yml'
  loop: >-
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle + foreman_infrastructure_lifecycle -%}
    {%-   for os in foreman_host_collections_os -%}
    {%-     set line = {'os': os, 'host_collection': [os + '-' + lifecycle|lower], 'lifecycle': lifecycle} -%}
    {%-     set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'key_lifecycle'

- name: 'Configure Foreman for deployment'
  import_tasks: 'configure_deployment.yml'

- name: 'Configure Host Discovery'
  shell: |
    export LANG="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
    /usr/sbin/foreman-installer --enable-foreman-plugin-discovery

- name: 'Configure PXE'
  import_tasks: 'configure_pxe.yml'

- name: 'Ensure Domains and Subnets'
  import_tasks: 'domains_subnets.yml'

- name: 'Ensure Installation Media and Operating Systems'
  import_tasks: 'installmedia_os.yml'

- name: 'Ensure Host Groups'
  import_tasks: 'host_groups.yml'

- name: 'Set Random Hostname generator to MAC based'
  theforeman.foreman.setting:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: 'name_generator_type'
    value: 'MAC-based'

- name: 'Fix MongoDB warnings by setting permissions'
  acl:
    path: '/var/lib/mongodb'
    entity: 'foreman-proxy'
    etype: 'user'
    permissions: 'r'
    state: 'present'
