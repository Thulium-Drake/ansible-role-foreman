---
- name: 'Ensure package dependencies'
  package:
    name: 'python-pip'
    state: 'present'

- name: 'Ensure PiP dependencies'
  pip:
    name: 'apypie'
    state: 'present'

- name: 'Ensure organization'
  theforeman.foreman.organization:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ foreman_organization }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'

- name: 'Ensure Locations'
  theforeman.foreman.location:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organizations:
      - "{{ foreman_organization }}"
    name: "{{ location }}"
    state: 'present'
  loop: "{{ foreman_locations }}"
  loop_control:
    loop_var: 'location'

- name: 'Ensure Lifecycle environments'
  theforeman.foreman.lifecycle_environment:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ lifecycle }}"
    description: 'Managed by Ansible, your changes will be lost'
    prior: "{{ foreman_lifecycle[index-1] }}"
    state: 'present'
  loop: "{{ foreman_lifecycle }}"
  when: lifecycle != 'Library'
  loop_control:
    index_var: 'index'
    loop_var: 'lifecycle'

- name: 'Ensure Lifecycle Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ host_collection }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: >-
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle -%}
    {%-   for os in foreman_host_collections_os -%}
    {%-     set line = os + '-' + lifecycle|lower -%}
    {%-     set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'host_collection'

- name: 'Ensure OS Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ os_collection }}"
    description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_host_collections_os }}"
  loop_control:
    loop_var: 'os_collection'

- name: 'Ensure daily sync plan'
  theforeman.foreman.sync_plan:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    interval: 'daily'
    name: 'Daily repo sync'
    description: 'Managed by Ansible, your changes will be lost'
    enabled: true
    sync_date: '2020-01-01 00:00:00 UTC'
    state: 'present'

- name: 'Ensure product GPG keys'
  theforeman.foreman.content_credential:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product.gpg_key }}"
    content_type: 'gpg_key'
    content: "{{ lookup('url', product.gpg_key_url, split_lines=False) }}"
    state: 'present'
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'

- name: 'Ensure products'
  theforeman.foreman.product:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product.name }}"
    description: 'Managed by Ansible, your changes will be lost'
    gpg_key: "{{ product.gpg_key }}"
    sync_plan: 'Daily repo sync'
    state: 'present'
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'

- name: 'Ensure product repositories'
  theforeman.foreman.repository:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    download_policy: 'immediate'
    http_proxy_policy: "{{ foreman_http_proxy_policy | default('none') }}"
    http_proxy: "{{ foreman_http_proxy | default(omit) }}"
    name: "{{ repo.0.name }}-{{ repo.1.name }}"
    url: "{{ repo.1.url }}"
    content_type: "{{ repo.0.type }}"
    ssl_ca_cert: "{{ repo.1.ssl_ca_cert | default(omit) }}"
    ssl_client_cert: "{{ repo.1.ssl_client_cert | default(omit) }}"
    ssl_client_key: "{{ repo.1.ssl_client_key | default(omit) }}"
    upstream_username: "{{ repo.1.upstream_username | default(omit) }}"
    upstream_password: "{{ repo.1.upstream_password | default(omit) }}"
    product: "{{ repo.0.name }}"
    gpg_key: "{{ repo.0.gpg_key }}"
    state: 'present'
  register: 'repo_created'
  loop: "{{ foreman_products | subelements('repositories', { 'skip_missing': true}) }}"
  loop_control:
    loop_var: 'repo'

- name: 'Trigger repository sync'
  theforeman.foreman.repository_sync:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    product: "{{ product.name }}"
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'
  async: 3600
  poll: 0
  when: repo_created.changed

- name: 'Ensure content views and versions'
  include_tasks: 'cv_add_base.yml'
  loop: "{{ foreman_products }}"

- name: 'Ensure composite content views'
  theforeman.foreman.content_view:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ comp_content_view.name }}"
    description: 'Managed by Ansible, your changes will be lost'
    composite: true
    auto_publish: true
    components: "{{ comp_content_view.components}}"
  register: 'cov_created'
  loop: "{{ foreman_composite_content_views }}"
  loop_control:
    loop_var: 'comp_content_view'

- name: 'Promote content view version for newly created composite content views'
  theforeman.foreman.content_view_version:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    content_view: "{{ comp_content_view.name }}"
    lifecycle_environments: "{{ foreman_lifecycle }}"
  when: cov_created.changed
  loop: "{{ foreman_composite_content_views }}"
  loop_control:
    loop_var: 'comp_content_view'

- name: 'Ensure Activation key Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ collection.name | lower }}"
    #description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_activation_keys }}"
  loop_control:
    loop_var: 'collection'

- name: 'Ensure Activation key extra Host Collections'
  theforeman.foreman.host_collection:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ collection.1 }}"
    #description: 'Managed by Ansible, your changes will be lost'
    state: 'present'
  loop: "{{ foreman_activation_keys | subelements('host_collections', { 'skip_missing': true}) }}"
  loop_control:
    loop_var: 'collection'

- name: 'Ensure Activation keys'
  include_tasks: 'activation_key_add.yml'
  loop: >-
    {%- set results = [] -%}
    {%- for lifecycle in foreman_lifecycle -%}
    {%-   for os in foreman_host_collections_os -%}
    {%-     set line = {'os': os, 'host_collection': [os + '-' + lifecycle|lower], 'lifecycle': lifecycle} -%}
    {%-     set _ = results.append(line) if lifecycle != 'Library' -%}
    {%-   endfor -%}
    {%- endfor -%}
    {{ results }}
  loop_control:
    loop_var: 'key_lifecycle'

- name: 'start'
  debug:

- name: 'Configure Foreman for OS deployment'
  include_tasks: 'enable_deployment.yml'
  when: foreman_configure_deployment
